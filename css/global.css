/*** ATOM STYLES ***/

body {
	margin: 0;
}

/* Text Atom Styles */
p, a, li, button, figcaption, blockquote {
	font-family: 'Dosis', sans-serif;
	font-weight: 300;
	font-size: 1em;
}

blockquote {
	font-style: italic;
}

figcaption {
	font-style: italic;
	font-weight: 500;
	text-align: center;
	text-indent: -2%;

	color: white;
}

h1, h2, h3, h4, h5, h6 {
	font-family: 'Limelight', serif;
	font-weight: 400;
	margin: 0px;
}

h1 {
	font-size: 4.084em;
	line-height: 1.2em;
}

h2 {
	font-size: 3.142em;
	line-height: 1.1em;
}

h3 {
	font-size: 2.417em;
	line-height: 1em;
}

h4 {
	font-size: 1.859em;
	line-height: .95em;
}

h5 {
	font-size: 1.43em;
	line-height: .9em;
}

h6 {
	font-size: 1.1em;
	line-height: .85em;
}

/* Image and Graphic Atom Styles */

img {
	width: 100%;
	max-width: 1000px;
}

button {
	font-weight: 500;
	color: white;
	background-color: rgb(106, 44, 62);
	
	border: none;
	outline: 2px solid rgb(207, 69, 32);
	outline-offset: 3px;
	
	margin: 5px;
	padding: 8px 16px;

	transition: transform 500ms;
}

button:hover {
	transform: scale(1.05, 1.05);
	cursor: pointer;
}

.social-link {
	margin: 0px 10px;
}

.social-link img {
	width: auto;
}

/* Color Styles */

.red-text {
	color: rgb(106, 44, 62);
}

.orange-text {
	color: rgb(207, 69, 32);
}

.red-background {
	background-color: rgb(106, 44, 62);
}

.orange-background {
	background-color: rgb(207, 69, 32);
}

.red-outline {
	outline: 2px solid rgb(106, 44, 62);
	outline-offset: 3px;
	margin: 5px;
}

.orange-outline {
	outline: 2px solid rgb(207, 69, 32);
	outline-offset: 3px;
	margin: 5px;
}

/*** MOLECULE STYLES ***/

/* Image and Text Cards */
figure {
	margin: 7px 0px 0px 0px;

	background-color: rgb(106, 44, 62);

	outline: 2px solid rgb(207, 69, 32);
	outline-offset: 3px;
	padding: 3px;
}

.text-card {
	display: flex;
	flex-direction: column;
	flex-wrap: none;
	align-items: center;
	justify-content: center;


}

.text-card h3 {
	margin-bottom: 0px;
}

.wide-card {
	min-width: 55%;
}

.test-card {
	min-width: 40%;
}

/* Navigation */

.main-nav {
	width: calc(100% - 2px);
	padding: 2px;
	margin: 5px -1px 0px -1px;

	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: space-around;

	outline: 2px solid rgb(207, 69, 32);
	outline-offset: 2px;
}

.main-nav a {
	width: 100%;
	height: 100%;
	padding: 10px;

	font-weight: 600;
	font-size: 20px;
	color: white;
	text-decoration: none;
	text-align: center;

	background-color: rgb(106, 44, 62);
	transition: background-color 200ms ease-out;
}

.main-nav a:hover {
	background-color: rgb(207, 69, 32);
}

@media screen and (max-width: 600px) {
	.main-nav a {
		font-size: 4vw;
		white-space: nowrap;
	}
}

/*** ORGANISM STYLES ***/

/* Main Content Section */
main {
	max-width: 1200px;
	margin: 0 auto;
	padding: 0px 20px;
}

@media screen and (max-width: 480px) {
	main {
		padding: 0px 10px;
	}
}

/* Header Styles */
header {
	margin: 30px 0px 20px 0px;
	text-align: center;
}

header h1 {
	font-weight: bold;
}

@media screen and (max-width: 792px) {
	header h1 {
		font-size: 7vw;
	}

	header h2 {
		font-size: 5vw;
	}
}

/* Footer Styles */
footer {
	background-color: lightgray;
	padding: 20px 0px;

	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: center;
	align-items: center;
}

footer p {
	text-align: center;
}

/* Perspective Content Block Styles */
.perspective-content-block {
	width: 95%;

	/* 
		I start doing some more advanced stuff here, so I will pepper in some 
		explanatory comments for anyone interested. 
	*/

	/* Defines perspective for 3D rotated child elements */
	perspective: 800px;
	-webkit-perspective: 800px;
	perspective-origin: top left;
	-webkit-perspective-origin: top left;

	/* 
		Using flexboxes for responsiveness. Check out http://the-echoplex.net/flexyboxes/ if you're interedted in playing around with them.
		They are intimidating at first.
	*/
	display: flex;
	flex-direction: row;
	flex-flow: nowrap;
	align-items: top;
	justify-content: space-around;

	margin-bottom: 90px;
}

.perspective-content-block > div {
	transition: transform 200ms;
}

.perspective-content-block > div:first-of-type {
	/* Rotates the first child div on the Y axis from the perspective-origin of it's parent element. */
	transform: rotateY(12deg);
}

.perspective-content-block > div:last-of-type {
	/* Rotates the last child div on the Y axis from the perspective-origin of it's parent element. */
	transform: rotateY(-12deg);
	margin-left: 10px;
}

.perspective-content-block > div:last-of-type figure {
	/* Corrects offset that causes figure to extend outside the perspective-content-block bounds when a figure is on the right.
		Will need to be fine-tuned with media queries.
	 */
	margin-right: 35px;

	/* Fixes strange visual bug that affects the height of images in the right card of the perspective-content-block */
	transform: scaleY(1.1);
	transform-origin: top;
	-webkit-transform-origin: top;

	transition: transform 200ms;
}

@media screen and (max-width: 792px) {
	.perspective-content-block {
		width: 100%;
		flex-direction: column;
		margin-bottom: 0px;
	}

	.perspective-content-block p {
		align-self: left;
	}

	.perspective-content-block > div:first-of-type{
		margin-bottom: 20px;
		transform: rotateY(0deg);
	}

	.perspective-content-block > div:last-of-type{
		margin-bottom: 30px;
		margin-left: 0px;
		transform: rotateY(0deg);
	}

	.perspective-content-block > div:last-of-type figure {
		margin-right: 0px;
		transform: scaleY(1);
	}

	.flex-order-1 {
		order: 1;
		margin-bottom: 20px !important;
	}

	.flex-order-2 {
		order: 2;
		margin-bottom: 30px !important;
	}
}

@media screen and (max-width: 792px) {
	.banner-main-image {
		display: none;
	}

	.banner-nav-block {
		margin-bottom: 0px !important;
	}
}

/* TEST CODE */

main {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: center;

	perspective: 800px;
	-webkit-perspective: 800px;
}

section {
	max-width: 50%;
}

.left-section {
	transform: rotateY(20deg);
}

.right-section {
	transform: rotateY(-20deg);
}

article {
	margin-top: 30px;
}