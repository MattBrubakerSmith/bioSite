/*** ATOM STYLES ***/

body {
	max-width: 1200px;
	margin: 0 auto;
}

/* Text Atom Styles */
p, a, li, button, figcaption {
	font-family: 'Dosis', sans-serif;
	font-weight: 300;
	font-size: 1em;
}

figcaption {
	font-style: italic;
	font-weight: 500;
	text-align: center;
	text-indent: -2%;

	color: white;
}

h1, h2, h3, h4, h5, h6 {
	font-family: 'Limelight', serif;
}

h1 {
	font-size: 4.084em;
	line-height: 1.2em;
}

h2 {
	font-size: 3.142em;
	line-height: 1.1em;
}

h3 {
	font-size: 2.417em;
	line-height: 1em;
}

h4 {
	font-size: 1.859em;
	line-height: .95em;
}

h5 {
	font-size: 1.43em;
	line-height: .9em;
}

h6 {
	font-size: 1.1em;
	line-height: .85em;
}

/* Image and Graphic Atom Styles */

img {
	width: 100%;
	max-width: 1000px;
}

button {
	font-weight: 500;
	color: white;
	background-color: rgb(106, 44, 62);
	
	border: none;
	outline: 2px solid rgb(207, 69, 32);
	outline-offset: 3px;
	
	margin: 5px;
	padding: 8px 16px;

	transition: transform 500ms;
}

button:hover {
	transform: scale(1.05, 1.05);
	cursor: pointer;
}

/* Color Styles */

.red-text {
	color: rgb(106, 44, 62);
}

.orange-text {
	color: rgb(207, 69, 32);
}

.red-background {
	background-color: rgb(106, 44, 62);
}

.orange-background {
	background-color: rgb(207, 69, 32);
}

.red-outline {
	outline: 2px solid rgb(106, 44, 62);
	outline-offset: 3px;
	margin: 5px;
}

.orange-outline {
	outline: 2px solid rgb(207, 69, 32);
	outline-offset: 3px;
	margin: 5px;
}



/*** MOLECULE STYLES ***/


/* Image and Text Cards */
.image-card figure {
	margin: 10px;

	background-color: rgb(106, 44, 62);

	outline: 2px solid rgb(207, 69, 32);
	outline-offset: 3px;
	padding: 3px;
}

.text-card {
	display: flex;
	flex-direction: column;
	flex-wrap: none;
	align-items: center;
	justify-content: center;
}

.text-card h3 {
	margin-bottom: 0px;
}

.wide-card {
	min-width: 60%;
}

/* Navigation */

.main-nav {
	font-weight: 600;

	list-style-type: none;

	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: space-around;
}

/*** ORGANISM STYLES ***/

/* More changes to come when I implement media queries.*/

/* Perspective Content Block Styles */
.perspective-content-block {
	width: 95%;

	/* 
		I start doing some more advanced stuff here, so I will pepper in some 
		explanatory comments for anyone interested. 
	*/

	/* Defines perspective for 3D rotated child elements */
	perspective: 800px;
	-webkit-perspective: 800px;
	perspective-origin: top left;
	-webkit-perspective-origin: top left;

	/* 
		Using flexboxes for responsiveness. Check out http://the-echoplex.net/flexyboxes/ if you're interedted in playing around with them.
		They are intimidating at first.
	*/
	display: flex;
	flex-direction: row;
	flex-flow: nowrap;
	align-items: top;
	justify-content: space-around;

	margin-bottom: 70px;
}

.perspective-content-block div:first-of-type {
	/* Rotates the first child div on the Y axis from the perspective-origin of it's parent element. */
	transform: rotateY(12deg);
}

.perspective-content-block div:last-of-type {
	/* Rotates the last child div on the Y axis from the perspective-origin of it's parent element. */
	transform: rotateY(-12deg);
}

.perspective-content-block div:last-of-type figure {
	/* Corrects offset that causes figure to extend outside the perspective-content-block bounds when a figure is on the right.
		Will need to be fine-tuned with media queries.
	 */
	margin-right: 35px;
}